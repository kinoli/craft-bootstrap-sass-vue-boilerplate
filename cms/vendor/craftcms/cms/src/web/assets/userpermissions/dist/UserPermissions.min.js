!function(e){Craft.UserPermissions=Garnish.Base.extend({$wrapper:null,$selectAllBtn:null,$allCheckboxes:null,init:function(t){this.$wrapper=t,this.$selectAllBtn=e(".select-all",this.$wrapper),this.$allCheckboxes=e("input[type=checkbox]:not(.group-permission)",this.$wrapper),this.addListener(this.$selectAllBtn,"click","toggleSelectAll"),this.addListener(this.$allCheckboxes,"click","toggleCheckbox"),this.updateSelectAllBtn()},toggleSelectAll:function(e){this.canSelectAll()?this.$allCheckboxes.filter(":not(:checked)").trigger("click"):this.$allCheckboxes.filter(":checked").trigger("click"),e.preventDefault()},toggleCheckbox:function(t){let l=e(t.currentTarget);if(l.prop("disabled"))return void t.preventDefault();l.parent("li").find("> ul");let i=l.parent("li").find("> ul > li > input[type=checkbox]:not(.group-permission)");l.prop("checked")?i.prop("disabled",!1):(i.filter(":checked").trigger("click"),i.prop("disabled",!0)),this.updateSelectAllBtn()},updateSelectAllBtn:function(){this.canSelectAll()?this.$selectAllBtn.text(Craft.t("app","Select All")):this.$selectAllBtn.text(Craft.t("app","Deselect All"))},canSelectAll:function(){return!!this.$allCheckboxes.filter(":not(:checked)").length}});var t=e(".user-permissions");e.each(t,(function(){new Craft.UserPermissions(this)}))}(jQuery);
//# sourceMappingURL=UserPermissions.min.js.map
