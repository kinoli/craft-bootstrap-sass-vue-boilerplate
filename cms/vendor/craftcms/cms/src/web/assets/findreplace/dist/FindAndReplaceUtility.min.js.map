{"version":3,"sources":["findreplace/src/FindAndReplaceUtility.js"],"names":["$","Craft","FindAndReplaceUtility","Garnish","Base","extend","$trigger","$form","init","formId","$status","this","addListener","onSubmit","hasClass","ev","preventDefault","progressBar","$progressBar","resetProgressBar","ProgressBar","removeClass","postData","velocity","params","data","complete","getPostData","postActionRequest","action","proxy","response","error","textStatus","noop","updateProgressBar","setTimeout","trigger","$allDone","css","addClass","opacity","setProgressPercentage","appendTo","duration","trackJobProgress","cp","jQuery"],"mappings":"CAAA,SAACA,GACGC,MAAMC,sBAAwBC,QAAQC,KAAKC,OAAO,CAC9CC,SAD8C,KAE9CC,MAF8C,KAK1CC,KAAKD,SAAUE,GACVH,KAAAA,MAAaN,EAAA,IAAAS,GACbC,KAAAA,SAAYV,EAAA,eAAmBW,KAAKJ,OAEpCK,KAAAA,QAAYZ,EAAKO,kBAAiBI,KAAAJ,OAGnCI,KAAEC,YAAaD,KAAAJ,MAAA,SAAA,aAGnBM,SAAUP,SAASQ,GACXC,EAACC,iBAEEL,KAAAL,SAAAQ,SAAA,cACEG,KAALA,YAGCA,KAAYC,YAAjBC,mBAFCR,KAAAM,YAAA,IAAAhB,MAAAmB,YAAAT,KAAAD,SAMEC,KAAAM,YAAAC,aAAAG,YAAA,UAESC,KAAAA,YAAWnB,aAAAoB,SAAyBhB,QAAxCgB,SAAA,CACIC,QAASvB,GAETwB,CACMC,SAAEF,EAAAA,OAAAA,WADZ,IAAAF,EAAAnB,QAAAwB,YAAAhB,KAAAJ,OAIMqB,EAAkBJ,MAAOK,gBAAgBC,GAE7BC,EAASC,CAClBR,OAAAA,GAISvB,MAAG6B,kBAAYN,EAAeK,OAAxCJ,EAAAzB,EAAA8B,OAAA,SAAAC,EAAAE,GAEJF,GAAAA,EAAAC,OACgBE,MAAAA,EAAAA,OArB5BvB,KAAAwB,oBA0BmBC,WAAApC,EAAA8B,MAAAnB,KAAA,cAAA,OACGA,MACrB,CAPee,SAAU1B,EAAEkC,SAUdG,QAItBF,KAAmBG,UACH3B,KAAZ2B,SAAAC,IAAA,UAAA,GAIQ5B,KAAAL,SAAWkC,SAAA,YACTF,KAAAA,SAAUD,QAAA,UANxBF,kBAAmB,WAWyBM,KAASxB,YAAAyB,sBAAhCxB,MACKQ,WAAYI,WACrBQ,KAAAA,WAAmBG,KAASH,SAAAtC,EAAA,4CAAA2C,SAAAhC,KAAAD,SAAIC,KAAA2B,SAAAC,IAAA,UAAA,IACrC5B,KAAKL,YAASe,aAAYE,SAA1B,CAAAkB,QAAA,GAAA,CACKnC,SAAS+B,OAAQX,SAAtB1B,EAAA8B,OAAA,WAHwBnB,KAAA2B,SAAAf,SAAA,CAAAkB,QAAA,GAAA,CAAAG,SAAA,SAOhCjC,KAAAL,SAAAe,YAAA,YAJQV,KAAKL,SAAS+B,QAAQ,WAKrBQ,QAAT5C,MAAM6C,GAAGD,kBAAiB,GAAO,MAhF7C,CAmFGE","file":"FindAndReplaceUtility.min.js","sourcesContent":["(function($) {\n    Craft.FindAndReplaceUtility = Garnish.Base.extend({\n        $trigger: null,\n        $form: null,\n\n        init: function(formId) {\n            this.$form = $('#' + formId);\n            this.$trigger = $('input.submit', this.$form);\n            this.$status = $('.utility-status', this.$form);\n\n            this.addListener(this.$form, 'submit', 'onSubmit');\n        },\n\n        onSubmit: function(ev) {\n            ev.preventDefault();\n\n            if (!this.$trigger.hasClass('disabled')) {\n                if (!this.progressBar) {\n                    this.progressBar = new Craft.ProgressBar(this.$status);\n                } else {\n                    this.progressBar.resetProgressBar();\n                }\n\n                this.progressBar.$progressBar.removeClass('hidden');\n\n                this.progressBar.$progressBar.velocity('stop').velocity({\n                    opacity: 1\n                }, {\n                    complete: $.proxy(function() {\n                        var postData = Garnish.getPostData(this.$form),\n                            params = Craft.expandPostArray(postData);\n\n                        var data = {\n                            params: params\n                        };\n\n                        Craft.postActionRequest(params.action, data, $.proxy(function(response, textStatus) {\n                                if (response && response.error) {\n                                    alert(response.error);\n                                }\n\n                                this.updateProgressBar();\n\n                                setTimeout($.proxy(this, 'onComplete'), 300);\n                            }, this),\n                            {\n                                complete: $.noop\n                            });\n                    }, this)\n                });\n\n                if (this.$allDone) {\n                    this.$allDone.css('opacity', 0);\n                }\n\n                this.$trigger.addClass('disabled');\n                this.$trigger.trigger('blur');\n            }\n        },\n\n        updateProgressBar: function() {\n            var width = 100;\n            this.progressBar.setProgressPercentage(width);\n        },\n\n        onComplete: function() {\n            if (!this.$allDone) {\n                this.$allDone = $('<div class=\"alldone\" data-icon=\"done\" />').appendTo(this.$status);\n                this.$allDone.css('opacity', 0);\n            }\n\n            this.progressBar.$progressBar.velocity({opacity: 0}, {\n                duration: 'fast', complete: $.proxy(function() {\n                    this.$allDone.velocity({opacity: 1}, {duration: 'fast'});\n                    this.$trigger.removeClass('disabled');\n                    this.$trigger.trigger('focus');\n                }, this)\n            });\n\n            // Just in case the tool created a new task...\n            Craft.cp.trackJobProgress(false, true);\n        }\n    });\n})(jQuery);\n"]}