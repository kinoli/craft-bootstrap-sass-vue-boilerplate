{"version":3,"sources":["plugins/src/PluginManager.js"],"names":["$","Craft","PluginManager","Garnish","Base","extend","this","getPluginLicenseInfo","response","handle","hasOwnProperty","isComposerInstalled","Plugin","addUninstalledPluginRow","bind","sendApiRequest","resolve","reject","params","include","pluginLicenses","license","textStatus","contentType","$table","info","length","id","class","replaceWith","html","$row","children","appendTo","append","name","description","src","iconUrl","documentationUrl","text","normalizeUserKey","href","target","t","size","maxlength","value","licenseKey","readonly","disabled","licensedEdition","data-title","latestVersion","getCsrfInput","method","accept-charset","type","packageName","substr","$keyContainer","replace","updateTimeout","data-icon","data-align","initUiElements","$oldIcon","$newIcon","key","toUpperCase","hasMultipleEditions","manager","$newEdition","$details","$keyInput","$spinner","$buyBtn","edition","find","isTrial","removeAttr","data","addListener","getKey","insertBefore","val","$oldEdition","remove","select","onKeyChange","showLicenseKey","userKey","setTimeout","proxy","updateLicenseStatus","addClass","postActionRequest","then","$issues","update","message","licenseKeyStatus","licenseIssues","charAt","buyUrl","getCpUrl","upgradeAvailable","getUrl","version","removeClass","match","$form","$p","add","i","substring","accountLink","$newExpired","$oldExpired","expired","renewalUrl","jQuery"],"mappings":"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","file":"PluginManager.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.PluginManager = Garnish.Base.extend({\n        init: function() {\n            this.getPluginLicenseInfo()\n                .then(function(response) {\n                    for (var handle in response) {\n                        if (response.hasOwnProperty(handle)) {\n                            if (!response[handle].isComposerInstalled) {\n                                this.addUninstalledPluginRow(handle, response[handle]);\n                            } else {\n                                (new Plugin(this, $('#plugin-' + handle))).update(response[handle]);\n                            }\n                        }\n                    }\n                }.bind(this));\n        },\n\n        getPluginLicenseInfo: function() {\n            return new Promise(function(resolve, reject) {\n                Craft.sendApiRequest('GET', 'cms-licenses', {\n                        params: {\n                            include: 'plugins',\n                        },\n                    })\n                    .then(function(response) {\n                        Craft.postActionRequest('app/get-plugin-license-info', {\n                            pluginLicenses: response.license.pluginLicenses || [],\n                        }, function(response, textStatus) {\n                            if (textStatus === 'success') {\n                                resolve(response);\n                            } else {\n                                reject();\n                            }\n                        }, {\n                            contentType: 'json'\n                        });\n                    })\n                    .catch(reject);\n            });\n        },\n\n        addUninstalledPluginRow: function(handle, info) {\n            var $table = $('#plugins');\n            if (!$table.length) {\n                $table = $('<table/>', {\n                    id: 'plugins',\n                    'class': 'data fullwidth collapsible',\n                    html: '<tbody></tbody>'\n                });\n                $('#no-plugins').replaceWith($table);\n            }\n\n            var $row = $('<tr/>', {\n                    data: {\n                        handle: handle,\n                    }\n                })\n                .appendTo($table.children('tbody'))\n                .append(\n                    $('<th/>')\n                        .append(\n                            $('<div/>', {'class': 'plugin-infos'})\n                                .append(\n                                    $('<div/>', {'class': 'icon'})\n                                        .append(\n                                            $('<img/>', {src: info.iconUrl})\n                                        )\n                                )\n                                .append(\n                                    $('<div/>', {'class': 'details'})\n                                        .append(\n                                            $('<h2/>', {text: info.name})\n                                        )\n                                        .append(\n                                            info.description\n                                                ? $('<p/>', {text: info.description})\n                                                : $()\n                                        )\n                                        .append(\n                                            info.documentationUrl\n                                                ? $('<p/>', {'class': 'links'})\n                                                .append(\n                                                    $('<a/>', {\n                                                        href: info.documentationUrl,\n                                                        target: '_blank',\n                                                        text: Craft.t('app', 'Documentation')\n                                                    })\n                                                )\n                                                : $()\n                                        )\n                                        .append(\n                                            $('<div/>', {'class': 'flex license-key'})\n                                                .append(\n                                                    $('<div />', {'class': 'pane'})\n                                                        .append(\n                                                            $('<input/>', {\n                                                                'class': 'text code',\n                                                                size: 29,\n                                                                maxlength: 29,\n                                                                value: Craft.PluginManager.normalizeUserKey(info.licenseKey),\n                                                                readonly: true,\n                                                                disabled: true\n                                                            })\n                                                        )\n                                                )\n                                        )\n                                )\n                        )\n                )\n                .append(\n                    $('<td/>', {\n                        'class': 'nowrap',\n                        'data-title': Craft.t('app', 'Status')\n                    })\n                        .append(\n                            $('<span/>', {'class': 'status'})\n                        )\n                        .append(\n                            $('<span/>', {'class': 'light', text: Craft.t('app', 'Missing')})\n                        )\n                )\n                .append(\n                    info.latestVersion\n                        ? $('<td/>', {\n                            'class': 'nowrap thin',\n                            'data-title': Craft.t('app', 'Action')\n                        })\n                        .append(\n                            $('<form/>', {\n                                method: 'post',\n                                'accept-charset': 'UTF-8',\n                            })\n                                .append(\n                                    $('<input/>', {\n                                        type: 'hidden',\n                                        name: 'action',\n                                        value: 'pluginstore/install'\n                                    })\n                                )\n                                .append(\n                                    $('<input/>', {\n                                        type: 'hidden',\n                                        name: 'packageName',\n                                        value: info.packageName\n                                    })\n                                )\n                                .append(\n                                    $('<input/>', {\n                                        type: 'hidden',\n                                        name: 'handle',\n                                        value: handle\n                                    })\n                                )\n                                .append(\n                                    $('<input/>', {\n                                        type: 'hidden',\n                                        name: 'edition',\n                                        value: info.licensedEdition\n                                    })\n                                )\n                                .append(\n                                    $('<input/>', {\n                                        type: 'hidden',\n                                        name: 'version',\n                                        value: info.latestVersion\n                                    })\n                                )\n                                .append(\n                                    $('<input/>', {\n                                        type: 'hidden',\n                                        name: 'licenseKey',\n                                        value: info.licenseKey\n                                    })\n                                )\n                                .append(\n                                    $('<input/>', {\n                                        type: 'hidden',\n                                        name: 'return',\n                                        value: 'settings/plugins'\n                                    })\n                                )\n                                .append(Craft.getCsrfInput())\n                                .append(\n                                    $('<div/>', {'class': 'btngroup'})\n                                        .append(\n                                            $('<button/>', {\n                                                type: 'button',\n                                                'class': 'btn menubtn',\n                                                'data-icon': 'settings'\n                                            })\n                                        )\n                                        .append(\n                                            $('<div/>', {\n                                                'class': 'menu',\n                                                'data-align': 'right',\n                                            })\n                                                .append(\n                                                    $('<ul/>')\n                                                        .append(\n                                                            $('<li/>')\n                                                                .append(\n                                                                    $('<a/>', {\n                                                                        'class': 'formsubmit',\n                                                                        text: Craft.t('app', 'Install')\n                                                                    })\n                                                                )\n                                                        )\n                                                )\n                                        )\n                                )\n                        )\n                        : $()\n                )\n            ;\n\n            Craft.initUiElements($row);\n        }\n    }, {\n        normalizeUserKey: function(key) {\n            if (typeof key !== 'string' || key === '') {\n                return '';\n            }\n            if (key[0] === '$') {\n                return key;\n            }\n            return key.replace(/.{4}/g, '$&-').substr(0, 29).toUpperCase();\n        }\n    });\n\n    var Plugin = Garnish.Base.extend({\n        manager: null,\n        $row: null,\n        $details: null,\n        $keyContainer: null,\n        $keyInput: null,\n        $spinner: null,\n        $buyBtn: null,\n        handle: null,\n        updateTimeout: null,\n\n        init: function(manager, $row) {\n            this.manager = manager;\n            this.$row = $row;\n            this.$details = this.$row.find('.details');\n            this.$keyContainer = $row.find('.license-key')\n            this.$keyInput = this.$keyContainer.find('input.text').removeAttr('readonly');\n            this.$buyBtn = this.$keyContainer.find('.btn');\n            this.$spinner = $row.find('.spinner');\n            this.handle = this.$row.data('handle');\n            this.addListener(this.$keyInput, 'focus', 'onKeyFocus')\n            this.addListener(this.$keyInput, 'input', 'onKeyChange');\n        },\n\n        getKey: function() {\n            return this.$keyInput.val().replace(/\\-/g, '').toUpperCase();\n        },\n\n        onKeyFocus: function() {\n            this.$keyInput.select();\n        },\n\n        onKeyChange: function() {\n            if (this.updateTimeout) {\n                clearTimeout(this.updateTimeout);\n            }\n            var key = this.getKey();\n            if (key.length === 0 || key.length === 24 || (key.length > 1 && key[0] === '$')) {\n                // normalize\n                var userKey = Craft.PluginManager.normalizeUserKey(key);\n                this.$keyInput.val(userKey);\n                this.updateTimeout = setTimeout($.proxy(this, 'updateLicenseStatus'), 100);\n            }\n        },\n\n        updateLicenseStatus: function() {\n            this.$spinner.removeClass('hidden');\n            Craft.postActionRequest('app/update-plugin-license', {handle: this.handle, key: this.getKey()}, function(response, textStatus) {\n                if (textStatus === 'success') {\n                    this.manager.getPluginLicenseInfo()\n                        .then(function(response) {\n                            this.$spinner.addClass('hidden');\n                            this.update(response[this.handle]);\n                        }.bind(this));\n                }\n            }.bind(this))\n        },\n\n        update: function(info) {\n            // update the status icon\n            var $oldIcon = this.$row.find('.license-key-status');\n            if (info.licenseKeyStatus == 'valid' || info.licenseIssues.length) {\n                var $newIcon = $('<span/>', {'class': 'license-key-status ' + (info.licenseIssues.length === 0 ? 'valid' : '')});\n                if ($oldIcon.length) {\n                    $oldIcon.replaceWith($newIcon);\n                } else {\n                    $newIcon.appendTo(this.$row.find('.icon'));\n                }\n            } else if ($oldIcon.length) {\n                $oldIcon.remove();\n            }\n\n            // add the edition/trial badge\n            var $oldEdition = this.$row.find('.edition');\n            if (info.hasMultipleEditions || info.isTrial) {\n                var $newEdition = info.upgradeAvailable\n                    ? $('<a/>', {href: Craft.getUrl('plugin-store/' + this.handle), 'class': 'edition'})\n                    : $('<div/>', {'class': 'edition'});\n                if (info.hasMultipleEditions) {\n                    $('<div/>', {'class': 'edition-name', text: info.edition}).appendTo($newEdition);\n                }\n                if (info.isTrial) {\n                    $('<div/>', {'class': 'edition-trial', text: Craft.t('app', 'Trial')}).appendTo($newEdition);\n                }\n                if ($oldEdition.length) {\n                    $oldEdition.replaceWith($newEdition);\n                } else {\n                    $newEdition.insertBefore(this.$row.find('.version'));\n                }\n            } else if ($oldEdition.length) {\n                $oldEdition.remove();\n            }\n\n            // show the license key?\n            var showLicenseKey = info.licenseKey || info.licenseKeyStatus !== 'unknown';\n            if (showLicenseKey) {\n                this.$keyContainer.removeClass('hidden');\n                if (info.licenseKey && !this.$keyInput.val().match(/^\\$/)) {\n                    this.$keyInput.val(Craft.PluginManager.normalizeUserKey(info.licenseKey));\n                }\n            } else {\n                this.$keyContainer.addClass('hidden');\n            }\n\n            // update the license key input class\n            if (showLicenseKey && info.licenseIssues.length) {\n                this.$keyInput.addClass('error');\n            } else {\n                this.$keyInput.removeClass('error');\n            }\n\n            // add the error message\n            this.$row.find('p.error').remove();\n            if (info.licenseIssues.length) {\n                var $issues = $();\n                var $p, $form, message;\n                for (var i = 0; i < info.licenseIssues.length; i++) {\n                    switch (info.licenseIssues[i]) {\n                        case 'no_trials':\n                            message = Craft.t('app', 'Plugin trials are not allowed on this domain.');\n                            break;\n                        case 'wrong_edition':\n                            message = Craft.t('app', 'This license is for the {name} edition.', {\n                                name: info.licensedEdition.charAt(0).toUpperCase() + info.licensedEdition.substring(1)\n                            }) + ' <button type=\"button\" class=\"btn submit small formsubmit\">' + Craft.t('app', 'Switch') + '</button>';\n                            break;\n                        case 'mismatched':\n                            message = Craft.t('app', 'This license is tied to another Craft install. Visit {accountLink} to detach it, or <a href=\"{buyUrl}\">buy a new license</a>', {\n                                accountLink: '<a href=\"https://id.craftcms.com\" rel=\"noopener\" target=\"_blank\">id.craftcms.com</a>',\n                                buyUrl: Craft.getCpUrl(`plugin-store/buy/${this.handle}/${info.edition}`),\n                            });\n                            break;\n                        case 'astray':\n                            message = Craft.t('app', 'This license isn’t allowed to run version {version}.', {\n                                version: info.version\n                            });\n                            break;\n                        case 'required':\n                            message = Craft.t('app', 'A license key is required.');\n                            break;\n                        default:\n                            message = Craft.t('app', 'Your license key is invalid.');\n                    }\n\n                    $p = $('<p/>', {'class': 'error', html: message});\n                    if (info.licenseIssues[i] === 'wrong_edition') {\n                        $form = $('<form/>', {\n                            method: 'post',\n                            'accept-charset': 'UTF-8',\n                        })\n                            .append(Craft.getCsrfInput())\n                            .append(\n                                $('<input/>', {\n                                    type: 'hidden',\n                                    name: 'action',\n                                    value: 'plugins/switch-edition'\n                                })\n                            )\n                            .append(\n                                $('<input/>', {\n                                    type: 'hidden',\n                                    name: 'pluginHandle',\n                                    value: this.handle\n                                })\n                            )\n                            .append(\n                                $('<input/>', {\n                                    type: 'hidden',\n                                    name: 'edition',\n                                    value: info.licensedEdition\n                                })\n                            )\n                            .append($p);\n\n                        Craft.initUiElements($form);\n                        $issues = $issues.add($form);\n                    } else {\n                        $issues = $issues.add($p);\n                    }\n                }\n                $issues.appendTo(this.$details);\n                Craft.initUiElements()\n            }\n\n            // add the expired badge\n            var $oldExpired = this.$row.find('.expired');\n            if (info.expired) {\n                var $newExpired = $('<p/>', {\n                    'class': 'warning with-icon expired',\n                    html: Craft.t('app', 'This license has expired.') +\n                        ' ' +\n                        Craft.t('app', '<a>Renew now</a> for another year of updates.').replace('<a>', '<a href=\"' + info.renewalUrl + '\" target=\"_blank\">')\n                });\n                if ($oldExpired.length) {\n                    $oldExpired.replaceWith($newExpired);\n                } else {\n                    $newExpired.appendTo(this.$details);\n                }\n            }\n\n            // show/hide the Buy button\n            if (info.licenseKeyStatus === 'trial') {\n                this.$buyBtn.removeClass('hidden');\n                if (info.licenseIssues.length) {\n                    this.$buyBtn.addClass('submit');\n                } else {\n                    this.$buyBtn.removeClass('submit');\n                }\n            } else {\n                this.$buyBtn.addClass('hidden');\n            }\n        }\n    })\n})(jQuery);\n"]}