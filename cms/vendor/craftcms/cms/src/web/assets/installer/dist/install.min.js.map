{"version":3,"sources":["installer/src/install.js"],"names":["$","Craft","Installer","Garnish","Base","extend","$screens","$dots","$currentScreen","$dbDriverInput","$dbPortInput","currentScreen","loading","init","children","updateDbPortInput","addListener","find","PasswordInput","this","showModal","modal","hideOnEsc","gotoScreen","defaultPort","show","Modal","removeClass","shadeClass","val","driver","port","handleScreenSubmit","defaultDbPorts","inputs","getScreenInputNames","ev","preventDefault","inputsStr","$screen","attr","validate","gotoNextScreen","what","includePrefix","split","getInputData","data","showInstallScreen","i","length","input","$input","getInputPostVal","postActionRequest","eq","response","remove","textStatus","proxy","complete","noop","allDone","text","$h1","insertAfter","success","t","getUrl","postCpLoginRedirect","hide","addClass","j","add","appendTo","$currentDot","trigger","$submitBtn","insertBefore","action","errors","hasOwnProperty","validates","$errors","class","removeListener","$elements","shake","mysql","pgsql","$win","on","installer","jQuery"],"mappings":"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","file":"install.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.Installer = Garnish.Base.extend({\n        $bg: null,\n        $screens: null,\n        $dots: null,\n        $currentScreen: null,\n        $currentDot: null,\n\n        $dbDriverInput: null,\n        $dbPortInput: null,\n\n        modal: null,\n        currentScreen: null,\n        loading: false,\n\n        /**\n         * Constructor\n         */\n        init: function() {\n            this.$bg = $('#bg');\n            this.$screens = $('#screens').children();\n            this.$dbDriverInput = $('#db-driver');\n            this.$dbPortInput = $('#db-port');\n\n            this.updateDbPortInput();\n\n            this.addListener(this.$screens.find('form'), 'submit', 'handleScreenSubmit');\n            this.addListener(this.$screens.find('.btn.submit'), 'activate', 'handleScreenSubmit');\n\n            this.addListener($('#beginbtn'), 'activate', 'showModal');\n            this.addListener(this.$dbDriverInput, 'change', 'updateDbPortInput');\n\n            new Craft.PasswordInput('#account-password');\n        },\n\n        showModal: function() {\n            if (!this.modal) {\n                this.modal = new Garnish.Modal($('#install-modal').removeClass('hidden'), {\n                    hideOnEsc: false,\n                    shadeClass: ''\n                });\n                this.gotoScreen(1);\n            } else {\n                this.modal.show();\n            }\n        },\n\n        updateDbPortInput: function() {\n            var driver = this.$dbDriverInput.val();\n            var port = this.$dbPortInput.val();\n            var defaultPort = Craft.Installer.defaultDbPorts[driver];\n\n            this.$dbPortInput.attr('placeholder', defaultPort);\n            if (port == defaultPort) {\n                this.$dbPortInput.val('');\n            }\n        },\n\n        handleScreenSubmit: function(ev) {\n            ev.preventDefault();\n\n            var inputs = this.getScreenInputNames(this.$currentScreen);\n            if (inputs) {\n                this.validate(this.$currentScreen.attr('id'), inputs);\n            } else {\n                this.gotoNextScreen();\n            }\n        },\n\n        getScreenInputNames: function($screen) {\n            var inputsStr = $screen.attr('data-inputs');\n            return inputsStr ? inputsStr.split(',') : null;\n        },\n\n        getInputData: function(what, inputs, includePrefix) {\n            var data = {};\n            for (var i = 0; i < inputs.length; i++) {\n                var input = inputs[i],\n                    $input = $('#' + what + '-' + input);\n                data[(includePrefix ? what + '-' : '') + input] = Garnish.getInputPostVal($input);\n            }\n            return data;\n        },\n\n        showInstallScreen: function() {\n            var data = {};\n            var $screen;\n            var inputs;\n            for (var i = 1; i < this.$screens.length - 1; i++) {\n                $screen = this.$screens.eq(i);\n                inputs = this.getScreenInputNames($screen);\n                $.extend(data, this.getInputData($screen.attr('id'), inputs, true));\n            }\n\n            Craft.postActionRequest('install/install', data, $.proxy(this, 'allDone'), {\n                complete: $.noop\n            });\n        },\n\n        allDone: function(response, textStatus) {\n            $('#spinner').remove();\n            var $h1 = this.$currentScreen.find('h1:first');\n\n            if (textStatus === 'success' && response.success) {\n                $h1.text(Craft.t('app', 'Craft is installed! ðŸŽ‰'));\n\n                setTimeout(function() {\n                    window.location.href = Craft.getUrl(postCpLoginRedirect);\n                }, 1000);\n            } else {\n                $h1.text('Install failed ðŸ˜ž');\n                $('<p/>', {text: 'Please check your logs for more info.'})\n                    .insertAfter($h1);\n            }\n        },\n\n        gotoNextScreen: function() {\n            this.gotoScreen(this.currentScreen + 1);\n        },\n\n        gotoScreen: function(i) {\n            // Show the dots (unless it's the license screen)\n            if (i === 1) {\n                if (this.$dots) {\n                    this.$dots.hide();\n                }\n            } else {\n                if (!this.$dots) {\n                    this.$dots = $();\n                    for (var j = 0; j < this.$screens.length; j++) {\n                        this.$dots = this.$dots.add($('<div/>').appendTo($('#dots')));\n                    }\n                } else {\n                    this.$dots.show();\n                }\n            }\n\n            // Hide the current screen\n            if (this.$currentScreen) {\n                this.$currentScreen.addClass('hidden');\n                if (this.$currentDot) {\n                    this.$currentDot.removeClass('sel');\n                }\n            }\n\n            // Slide in the new screen\n            this.currentScreen = i;\n            this.$currentScreen = this.$screens.eq(i - 1)\n                .removeClass('hidden');\n            if (this.$dots) {\n                this.$currentDot = this.$dots.eq(i - 1)\n                    .addClass('sel');\n            }\n\n            // Is this the install screen?\n            if (i === this.$screens.length) {\n                this.showInstallScreen();\n            } else if (i !== 1) {\n                // Give focus to the first input\n                this.$currentScreen.find('input[type=text]:first').trigger('focus');\n            }\n        },\n\n        validate: function(what, inputs) {\n            // Prevent double-clicks\n            if (this.loading) {\n                return;\n            }\n\n            this.loading = true;\n\n            // Clear any previous error lists\n            this.$currentScreen.find('.input').removeClass('errors');\n            this.$currentScreen.find('ul.errors').remove();\n\n            var $submitBtn = this.$currentScreen.find('.btn.submit');\n            $submitBtn.addClass('sel loading');\n\n            var action = 'install/validate-' + what;\n            var data = this.getInputData(what, inputs, false);\n\n            Craft.postActionRequest(action, data, $.proxy(function(response, textStatus) {\n                this.loading = false;\n                $submitBtn.removeClass('sel loading');\n\n                if (textStatus === 'success') {\n                    if (response.validates) {\n                        this.gotoNextScreen();\n                    } else {\n                        var $errors = $('<ul/>', {'class': 'errors'})\n                            .insertBefore($('#' + what).find('.buttons'));\n\n                        for (var input in response.errors) {\n                            if (!response.errors.hasOwnProperty(input)) {\n                                continue;\n                            }\n\n                            for (var i = 0; i < response.errors[input].length; i++) {\n                                $('<li>' + response.errors[input][i] + '</li>').appendTo($errors);\n                            }\n\n                            var $input = $('#' + what + '-' + input + '-field').children('.input');\n                            $input.addClass('errors');\n                            ($.proxy(function($input) {\n                                var $elements = $input.find('select,input');\n                                this.addListener($elements, 'focus,blur,textchange,change', function() {\n                                    $input.removeClass('errors');\n                                    this.removeListener($elements, 'focus,blur,textchange,change');\n                                });\n                            }, this))($input);\n                        }\n\n                        Garnish.shake(this.$currentScreen);\n                    }\n                }\n            }, this));\n        }\n    }, {\n        defaultDbPorts: {\n            'mysql': 3306,\n            'pgsql': 5432\n        }\n    });\n\n    Garnish.$win.on('load', function() {\n        Craft.installer = new Craft.Installer();\n    });\n})(jQuery);\n"]}