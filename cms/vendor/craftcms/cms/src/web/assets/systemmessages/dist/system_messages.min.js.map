{"version":3,"sources":["systemmessages/src/system_messages.js"],"names":["$","SystemMessages","Garnish","Base","extend","init","messages","message","$messages","$container","find","i","Message","this","push","$subject","$body","modal","container","addListener","attr","MessageSettingsModal","edit","Craft","escapeHtml","updateHtmlFromModal","Modal","val","body","$bodyInput","replace","$subjectInput","text","subject","html","loading","$languageSelect","resizable","$saveBtn","loadContainer","$cancelBtn","key","base","csrfTokenName","postActionRequest","language","data","setContainer","csrfTokenValue","$spinner","proxy","response","textStatus","appendTo","$bod","preventDefault","length","switchLanguage","saveMessage","event","primarySiteLanguage","addClass","removeClass","success","displayNotice","show","hide","cp","t","displayError","cancel","jQuery"],"mappings":"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","file":"system_messages.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    var SystemMessages = Garnish.Base.extend({\n        messages: null,\n\n        init: function() {\n            this.messages = [];\n\n            var $container = $('#messages'),\n                $messages = $container.find('.message');\n\n            for (var i = 0; i < $messages.length; i++) {\n                var message = new Message($messages[i]);\n                this.messages.push(message);\n            }\n        }\n    });\n\n    var Message = Garnish.Base.extend({\n        $container: null,\n        key: null,\n        $subject: null,\n        $body: null,\n        modal: null,\n\n        init: function(container) {\n            this.$container = $(container);\n            this.key = this.$container.attr('data-key');\n            this.$subject = this.$container.find('.subject:first');\n            this.$body = this.$container.find('.body:first');\n\n            this.addListener(this.$container, 'click', 'edit');\n        },\n\n        edit: function() {\n            if (!this.modal) {\n                this.modal = new MessageSettingsModal(this);\n            } else {\n                this.modal.show();\n            }\n        },\n\n        updateHtmlFromModal: function() {\n            var subject = this.modal.$subjectInput.val(),\n                body = Craft.escapeHtml(this.modal.$bodyInput.val()).replace(/\\n/g, '<br>');\n\n            this.$subject.text(subject);\n            this.$body.html(body);\n        }\n    });\n\n    var MessageSettingsModal = Garnish.Modal.extend({\n        message: null,\n\n        $languageSelect: null,\n        $subjectInput: null,\n        $bodyInput: null,\n        $saveBtn: null,\n        $cancelBtn: null,\n        $spinner: null,\n\n        loading: false,\n\n        init: function(message) {\n            this.message = message;\n\n            this.base(null, {\n                resizable: true\n            });\n\n            this.loadContainer();\n        },\n\n        loadContainer: function(language) {\n            var data = {\n                key: this.message.key,\n                language: language\n            };\n\n            // If CSRF protection isn't enabled, these won't be defined.\n            if (typeof Craft.csrfTokenName !== 'undefined' && typeof Craft.csrfTokenValue !== 'undefined') {\n                // Add the CSRF token\n                data[Craft.csrfTokenName] = Craft.csrfTokenValue;\n            }\n\n            Craft.postActionRequest('system-messages/get-message-modal', data, $.proxy(function(response, textStatus) {\n                if (textStatus === 'success') {\n                    if (!this.$container) {\n                        var $container = $('<form class=\"modal fitted message-settings\" accept-charset=\"UTF-8\">' + response.body + '</form>').appendTo(Garnish.$bod);\n                        this.setContainer($container);\n                        this.show();\n                    } else {\n                        this.$container.html(response.body);\n                    }\n\n                    this.$languageSelect = this.$container.find('.language:first > select');\n                    this.$subjectInput = this.$container.find('.message-subject:first');\n                    this.$bodyInput = this.$container.find('.message-body:first');\n                    this.$saveBtn = this.$container.find('.submit:first');\n                    this.$cancelBtn = this.$container.find('.cancel:first');\n                    this.$spinner = this.$container.find('.spinner:first');\n\n                    this.addListener(this.$languageSelect, 'change', 'switchLanguage');\n                    this.addListener(this.$container, 'submit', 'saveMessage');\n                    this.addListener(this.$cancelBtn, 'click', 'cancel');\n\n                    setTimeout($.proxy(function() {\n                        this.$subjectInput.trigger('focus');\n                    }, this), 100);\n                }\n            }, this));\n        },\n\n        switchLanguage: function() {\n            this.loadContainer(this.$languageSelect.val());\n        },\n\n        saveMessage: function(event) {\n            event.preventDefault();\n\n            if (this.loading) {\n                return;\n            }\n\n            var data = {\n                key: this.message.key,\n                language: (this.$languageSelect.length ? this.$languageSelect.val() : Craft.primarySiteLanguage),\n                subject: this.$subjectInput.val(),\n                body: this.$bodyInput.val()\n            };\n\n            this.$subjectInput.removeClass('error');\n            this.$bodyInput.removeClass('error');\n\n            if (!data.subject || !data.body) {\n                if (!data.subject) {\n                    this.$subjectInput.addClass('error');\n                }\n\n                if (!data.body) {\n                    this.$bodyInput.addClass('error');\n                }\n\n                Garnish.shake(this.$container);\n                return;\n            }\n\n            this.loading = true;\n            this.$saveBtn.addClass('active');\n            this.$spinner.show();\n\n            Craft.postActionRequest('system-messages/save-message', data, $.proxy(function(response, textStatus) {\n                this.$saveBtn.removeClass('active');\n                this.$spinner.hide();\n                this.loading = false;\n\n                if (textStatus === 'success') {\n                    if (response.success) {\n                        // Only update the page if we're editing the current language's message\n                        if (data.language === Craft.primarySiteLanguage) {\n                            this.message.updateHtmlFromModal();\n                        }\n\n                        this.hide();\n                        Craft.cp.displayNotice(Craft.t('app', 'Message saved.'));\n                    } else {\n                        Craft.cp.displayError();\n                    }\n                }\n            }, this));\n        },\n\n        cancel: function() {\n            this.hide();\n\n            if (this.message) {\n                this.message.modal = null;\n            }\n        }\n    });\n\n    new SystemMessages();\n})(jQuery);\n"]}