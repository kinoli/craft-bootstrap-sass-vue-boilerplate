{"version":3,"sources":["routes/src/routes.js"],"names":["$","Routes","Garnish","Base","extend","tokens","routes","$container","$addRouteBtn","init","route","$routes","this","getRoutes","i","Route","length","push","Y_AXIS","DragSort","onSortChange","proxy","addListener","children","data","textStatus","response","attr","Craft","cp","success","displayNotice","t","displayError","addRoute","RouteSettingsModal","modal","container","uid","siteUid","$siteLabel","$uri","$template","find","updateHtmlFromModal","edit","sites","isMultiSite","uriInput","elements","name","text","uriHtml","$templateInput","$elem","isText","escapeHtml","val","prop","html","$cancelBtn","Modal","$heading","tokenHtml","$uriInput","$uriErrors","uriElements","$saveBtn","$spinner","pattern","loading","containerHtml","hasOwnProperty","$deleteBtn","hide","siteInfo","appendTo","$bod","$uriVars","addUriVar","currentTarget","$uriVar","clone","LEFT_KEY","MixedInput","dir","focusNextElement","uriNodes","DELETE_KEY","node","setTimeout","isTextNode","removeElement","setVal","nodeValue","templateVal","base","$firstElem","setCarotPos","event","saveRoute","elem","addElement","removeClass","keyCode","focusPreviousElement","$siteInput","RIGHT_KEY","preventDefault","show","cpTrigger","startsWith","addUriError","setFocus","trigger","bind","template","postActionRequest","remove","routeHtml","$route","sorter","addClass","actionTrigger","setting","error","insertAfter","deleteRoute","confirm","routeUid","removeItems","$items","addItems","errors","uri","ui","addErrorsToList","createErrorList","cancel","jQuery"],"mappings":"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","file":"routes.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    var Routes = Garnish.Base.extend({\n        tokens: null,\n        routes: null,\n        $container: null,\n        $addRouteBtn: null,\n        sorter: null,\n\n        init: function() {\n            this.tokens = {};\n            this.routes = [];\n            this.$container = $('#routes');\n\n            var $routes = this.getRoutes();\n\n            for (var i = 0; i < $routes.length; i++) {\n                var route = new Route($routes[i]);\n                this.routes.push(route);\n            }\n\n            this.sorter = new Garnish.DragSort($routes, {\n                axis: Garnish.Y_AXIS,\n                onSortChange: $.proxy(this, 'updateRouteOrder')\n            });\n\n            this.$addRouteBtn = $('#add-route-btn');\n\n            this.addListener(this.$addRouteBtn, 'click', 'addRoute');\n        },\n\n        getRoutes: function() {\n            return this.$container.children();\n        },\n\n        updateRouteOrder: function() {\n            var $routes = this.getRoutes(),\n                data = {};\n\n            for (var i = 0; i < $routes.length; i++) {\n                data['routeUids[' + i + ']'] = $($routes[i]).attr('data-uid');\n            }\n\n            Craft.postActionRequest('routes/update-route-order', data, $.proxy(function(response, textStatus) {\n                if (textStatus === 'success') {\n                    if (response.success) {\n                        Craft.cp.displayNotice(Craft.t('app', 'New route order saved.'));\n                    } else {\n                        Craft.cp.displayError(Craft.t('app', 'Couldn’t save new route order.'));\n                    }\n                }\n            }, this));\n        },\n\n        addRoute: function() {\n            new RouteSettingsModal();\n        }\n    });\n\n    var Route = Garnish.Base.extend({\n        $container: null,\n        uid: null,\n        siteUid: null,\n        $siteLabel: null,\n        $uri: null,\n        $template: null,\n        modal: null,\n\n        init: function(container) {\n            this.$container = $(container);\n            this.uid = this.$container.data('uid');\n            this.siteUid = this.$container.data('site-uid');\n            this.$siteLabel = this.$container.find('.site:first');\n            this.$uri = this.$container.find('.uri:first');\n            this.$template = this.$container.find('.template:first');\n\n            this.addListener(this.$container, 'click', 'edit');\n        },\n\n        edit: function() {\n            if (!this.modal) {\n                this.modal = new RouteSettingsModal(this);\n            } else {\n                this.modal.show();\n            }\n        },\n\n        updateHtmlFromModal: function() {\n            var i;\n\n            if (Craft.isMultiSite) {\n                if (this.siteUid) {\n                    for (i = 0; i < Craft.sites.length; i++) {\n                        if (Craft.sites[i].uid == this.siteUid) {\n                            this.$siteLabel.text(Craft.sites[i].name);\n                            break;\n                        }\n                    }\n                } else {\n                    this.$siteLabel.text(Craft.t('app', 'Global'));\n                }\n            }\n\n            var uriHtml = '';\n\n            for (i = 0; i < this.modal.uriInput.elements.length; i++) {\n                var $elem = this.modal.uriInput.elements[i];\n\n                if (this.modal.uriInput.isText($elem)) {\n                    uriHtml += Craft.escapeHtml($elem.val());\n                } else {\n                    uriHtml += $elem.prop('outerHTML');\n                }\n            }\n\n            this.$uri.html(uriHtml);\n            this.$template.text(this.modal.$templateInput.val());\n        }\n    });\n\n    var RouteSettingsModal = Garnish.Modal.extend({\n        route: null,\n        $heading: null,\n        $uriInput: null,\n        $uriErrors: null,\n        uriElements: null,\n        $templateInput: null,\n        $saveBtn: null,\n        $cancelBtn: null,\n        $spinner: null,\n        $deleteBtn: null,\n        loading: false,\n\n        init: function(route) {\n            this.route = route;\n\n            var tokenHtml = '<h4>' + Craft.t('app', 'Add a token') + '</h4>';\n\n            for (var name in Craft.routes.tokens) {\n                if (!Craft.routes.tokens.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                var pattern = Craft.routes.tokens[name];\n                tokenHtml += '<div class=\"token\" data-name=\"' + name + '\" data-value=\"' + pattern + '\"><span>' + name + '</span></div>';\n            }\n\n            var containerHtml =\n                '<form class=\"modal fitted route-settings\" accept-charset=\"UTF-8\">' +\n                '<div class=\"header\">' +\n                '<h1></h1>' +\n                '</div>' + // .header\n                '<div class=\"body\">' +\n                '<div class=\"uri-field field\">' +\n                '<div class=\"heading\">' +\n                '<label for=\"uri\">' + Craft.t('app', 'If the URI looks like this') + ':</label>' +\n                '</div>' +  // .heading\n                '<div class=\"input\">';\n\n            if (Craft.isMultiSite) {\n                containerHtml +=\n                    '<div class=\"flex\">' +\n                    '<div class=\"flex-grow\">';\n            }\n\n            containerHtml += '<div id=\"uri\" class=\"text uri ltr\"></div>';\n\n            var i;\n\n            if (Craft.isMultiSite) {\n                containerHtml +=\n                    '</div>' + // .flex-grow\n                    '<div class=\"select\">' +\n                    '<select class=\"site\">' +\n                    '<option value=\"\">' + Craft.t('app', 'Global') + '</option>';\n\n                for (i = 0; i < Craft.sites.length; i++) {\n                    var siteInfo = Craft.sites[i];\n                    containerHtml += '<option value=\"' + siteInfo.uid + '\">' + Craft.escapeHtml(siteInfo.name) + '</option>';\n                }\n\n                containerHtml +=\n                    '</select>' +\n                    '</div>' + // .select\n                    '</div>'; // .flex\n            }\n\n            containerHtml +=\n                '</div>' + // .input\n                '<div class=\"uri-tokens\">' +\n                tokenHtml +\n                '</div>' + // .uri-tokens\n                '</div>' + // .uri-field\n                '<div class=\"template-field field\">' +\n                '<div class=\"heading\">' +\n                '<label for=\"template\">' + Craft.t('app', 'Load this template') + ':</label>' +\n                '</div>' + // .heading\n                '<div class=\"input\">' +\n                '<input id=\"template\" type=\"text\" class=\"text fullwidth template ltr\">' +\n                '</div>' + // .input\n                '</div>' + // .template-field\n                '</div>' + // .body\n                '<div class=\"footer\">' +\n                '<div class=\"buttons right last\">' +\n                '<button type=\"button\" class=\"btn cancel\">' + Craft.t('app', 'Cancel') + '</button>' +\n                '<button type=\"submit\" class=\"btn submit\">' + Craft.t('app', 'Save') + '</button>' +\n                '<div class=\"spinner\" style=\"display: none;\"></div>' +\n                '</div>' +\n                '<a class=\"delete\">' + Craft.t('app', 'Delete') + '</a>' +\n                '</div>' +\n                '</form>';\n\n            var $container = $(containerHtml).appendTo(Garnish.$bod);\n\n            // Find the other elements\n            this.$heading = $container.find('h1:first');\n            this.$siteInput = $container.find('.site:first');\n            this.$uriInput = $container.find('.uri:first');\n            this.$templateInput = $container.find('.template:first');\n            this.$saveBtn = $container.find('.submit:first');\n            this.$cancelBtn = $container.find('.cancel:first');\n            this.$spinner = $container.find('.spinner:first');\n            this.$deleteBtn = $container.find('.delete:first');\n\n            // Hide the Delete button for new routes\n            if (!this.route) {\n                this.$deleteBtn.hide();\n            }\n\n            // Initialize the uri input\n            this.uriInput = new Garnish.MixedInput(this.$uriInput, {\n                dir: 'ltr'\n            });\n\n            // Set the heading\n            if (this.route) {\n                this.$heading.html(Craft.t('app', 'Edit Route'));\n            } else {\n                this.$heading.html(Craft.t('app', 'Create a new route'));\n            }\n\n            if (this.route) {\n                // Set the site\n                this.$siteInput.val(this.route.siteUid);\n\n                // Set the initial uri value\n                var uriNodes = this.route.$uri.prop('childNodes');\n\n                for (i = 0; i < uriNodes.length; i++) {\n                    var node = uriNodes[i];\n\n                    if (Garnish.isTextNode(node)) {\n                        var text = this.uriInput.addTextElement();\n                        text.setVal(node.nodeValue);\n                    } else {\n                        this.addUriVar(node);\n                    }\n                }\n\n                // Set the initial Template value\n                var templateVal = this.route.$template.text();\n                this.$templateInput.val(templateVal);\n            }\n\n            this.base($container);\n\n            // We must add vars on mousedown, so that text elements don't have a chance\n            // to lose focus, thus losing the carot position.\n            var $uriVars = this.$container.find('.uri-tokens').children('div');\n\n            this.addListener($uriVars, 'mousedown', function(event) {\n                this.addUriVar(event.currentTarget);\n            });\n\n            // Save/Cancel/Delete\n            this.addListener(this.$container, 'submit', 'saveRoute');\n            this.addListener(this.$cancelBtn, 'click', 'cancel');\n            this.addListener(this.$deleteBtn, 'click', 'deleteRoute');\n        },\n\n        addUriVar: function(elem) {\n            var $uriVar = $(elem).clone().attr('tabindex', '0');\n            this.uriInput.addElement($uriVar);\n\n            this.addListener($uriVar, 'keydown', function(event) {\n                switch (event.keyCode) {\n                    case Garnish.LEFT_KEY: {\n                        // Select the previous element\n                        setTimeout($.proxy(function() {\n                            this.uriInput.focusPreviousElement($uriVar);\n                        }, this), 1);\n\n                        break;\n                    }\n                    case Garnish.RIGHT_KEY: {\n                        // Select the next element\n                        setTimeout($.proxy(function() {\n                            this.uriInput.focusNextElement($uriVar);\n                        }, this), 1);\n\n                        break;\n                    }\n                    case Garnish.DELETE_KEY: {\n                        // Delete this element\n                        setTimeout($.proxy(function() {\n                            this.uriInput.removeElement($uriVar);\n                        }, this), 1);\n\n                        event.preventDefault();\n                    }\n                }\n            });\n        },\n\n        show: function() {\n            if (this.route) {\n                this.$heading.html(Craft.t('app', 'Edit Route'));\n                this.$deleteBtn.show();\n            }\n\n            // Focus on the first element\n            setTimeout(function() {\n                if (this.uriInput.elements.length) {\n                    var $firstElem = this.uriInput.elements[0];\n                    this.uriInput.setFocus($firstElem);\n                    this.uriInput.setCarotPos($firstElem, 0);\n                } else {\n                    this.$uriInput.trigger('focus');\n                }\n            }.bind(this), 100);\n\n            this.base();\n        },\n\n        saveRoute: function(event) {\n            event.preventDefault();\n\n            if (this.loading) {\n                return;\n            }\n\n            this.$container.find('.uri-field .input').removeClass('errors');\n            if (this.$uriErrors) {\n                this.$uriErrors.remove();\n                this.$uriErrors = null;\n            }\n\n            var data = {\n                siteUid: this.$siteInput.val()\n            };\n\n            if (this.route) {\n                data.routeUid = this.route.uid;\n            }\n\n            var $elem, val;\n\n            for (var i = 0; i < this.uriInput.elements.length; i++) {\n                $elem = this.uriInput.elements[i];\n\n                if (this.uriInput.isText($elem)) {\n                    val = $elem.val();\n\n                    if (i === 0) {\n                        // Remove any leading slashes\n                        val = Craft.ltrim(val, '/');\n\n                        // Make sure the first element isn't using the action/CP trigger\n                        if (Craft.startsWith(val, Craft.actionTrigger + '/')) {\n                            this.addUriError(Craft.t('app', 'The URI can’t begin with the {setting} config setting.', {\n                                setting: 'actionTrigger'\n                            }));\n                            return;\n                        } else if (Craft.cpTrigger && Craft.startsWith(val, Craft.cpTrigger + '/')) {\n                            this.addUriError(Craft.t('app', 'The URI can’t begin with the {setting} config setting.', {\n                                setting: 'cpTrigger'\n                            }));\n                            return;\n                        }\n                    }\n\n                    data['uriParts[' + i + ']'] = val;\n                } else {\n                    data['uriParts[' + i + '][0]'] = $elem.attr('data-name');\n                    data['uriParts[' + i + '][1]'] = $elem.attr('data-value');\n                }\n            }\n\n            data.template = this.$templateInput.val();\n\n            this.loading = true;\n            this.$saveBtn.addClass('active');\n            this.$spinner.show();\n\n            Craft.postActionRequest('routes/save-route', data, $.proxy(function(response, textStatus) {\n                this.$saveBtn.removeClass('active');\n                this.$spinner.hide();\n                this.loading = false;\n\n                if (textStatus === 'success') {\n                    if (response.success) {\n                        // Is this a new route?\n                        if (!this.route) {\n                            var routeHtml =\n                                '<div class=\"route\" data-uid=\"' + response.routeUid + '\"' + (response.siteUid ? ' data-site-uid=\"' + response.siteUid + '\"' : '') + '>' +\n                                '<div class=\"uri-container\">';\n\n                            if (Craft.isMultiSite) {\n                                routeHtml += '<span class=\"site\"></span>';\n                            }\n\n                            routeHtml +=\n                                '<span class=\"uri\" dir=\"ltr\"></span>' +\n                                '</div>' +\n                                '<div class=\"template\" dir=\"ltr\"></div>' +\n                                '</div>';\n\n                            var $route = $(routeHtml);\n\n                            $route.appendTo('#routes');\n\n                            this.route = new Route($route);\n                            this.route.modal = this;\n\n                            Craft.routes.sorter.addItems($route);\n\n                            // Was this the first one?\n                            if (Craft.routes.sorter.$items.length === 1) {\n                                $('#noroutes').addClass('hidden');\n                            }\n                        }\n\n                        this.route.siteUid = response.siteUid;\n                        this.route.updateHtmlFromModal();\n                        this.hide();\n\n                        Craft.cp.displayNotice(Craft.t('app', 'Route saved.'));\n                    } else if (response.errors) {\n                        if (response.errors.uri) {\n                        }\n                    } else {\n                        Craft.cp.displayError(Craft.t('app', 'Couldn’t save route.'));\n                    }\n                }\n            }, this));\n        },\n\n        addUriError: function(error) {\n            this.$container.find('.uri-field .input').addClass('errors');\n            if (this.$uriErrors) {\n                Craft.ui.addErrorsToList(this.$uriErrors, [error]);\n            } else {\n                this.$uriErrors = Craft.ui.createErrorList([error]);\n                this.$uriErrors.insertAfter(this.$container.find('.uri-field .input'));\n            }\n        },\n\n        cancel: function() {\n            this.hide();\n\n            if (this.route) {\n                this.route.modal = null;\n            }\n        },\n\n        deleteRoute: function() {\n            if (confirm(Craft.t('app', ('Are you sure you want to delete this route?')))) {\n                Craft.postActionRequest('routes/delete-route', {routeUid: this.route.uid}, function(response, textStatus) {\n                    if (textStatus === 'success') {\n                        Craft.cp.displayNotice(Craft.t('app', 'Route deleted.'));\n                    }\n                });\n\n                Craft.routes.sorter.removeItems(this.route.$container);\n                this.route.$container.remove();\n                this.hide();\n\n                // Was this the last one?\n                if (Craft.routes.sorter.$items.length === 0) {\n                    $('#noroutes').removeClass('hidden');\n                }\n            }\n        }\n    });\n\n    Craft.routes = new Routes();\n})(jQuery);\n"]}