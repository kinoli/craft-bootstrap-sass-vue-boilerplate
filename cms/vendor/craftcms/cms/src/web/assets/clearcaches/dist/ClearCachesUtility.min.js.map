{"version":3,"sources":["clearcaches/src/ClearCachesUtility.js"],"names":["$","Craft","ClearCachesUtility","Garnish","Base","extend","init","formId","$forms","i","length","$form","find","$checkboxes","filter","$btn","removeClass","addClass","on","checkInputs","this","addListener","ev","preventDefault","hasClass","onSubmit","progressBar","$allDone","currentTarget","$trigger","$status","data","ProgressBar","resetProgressBar","$progressBar","velocity","opacity","postData","getPostData","params","expandPostArray","action","response","textStatus","postActionRequest","setProgressPercentage","appendTo","css","complete","duration","trigger","noop","jQuery"],"mappings":"CAAA,SAACA,GACGC,MAAMC,mBAAqBC,QAAQC,KAAKC,OAAO,CACvCC,KAAE,SAASC,GACPC,IAAMA,EAAKR,EAAA,gBACf,IAAK,IAAIS,EAAI,EAAGA,EAAID,EAAOE,OAAQD,IAAK,CAA9B,IAAVE,EAAoBH,EAAOE,GAAAA,GACXF,EAAZG,EAAAC,KAAA,wBACIC,EAAcF,EAAMC,KAAK,QAClBD,EAAW,WAEdE,EAAYC,OAAO,YAAYJ,OADxBK,EAAGC,YAAW,YAEhBA,EAAYC,SAAA,aAGpBJ,EAAAK,GAAA,SAAAC,GALLA,IASAC,KAAKC,YAAYV,EAAO,SAAUW,IAFtBJ,EAAGK,iBACJR,EAAAS,SAAA,aACXJ,KAAiBT,SAAOW,OAKvBG,SALD,SAAAH,GAMH,IASGI,EAAAC,EATHhB,EAAAX,EAAAsB,EAAAM,eAtBsCC,EAAAlB,EAAAC,KAAA,iBAyBjCkB,EAAAnB,EAAaC,KAAA,mBAEfiB,EAAWlB,SAAW,cAKzBA,EAAAoB,KAAA,gBAGSL,EAAMf,EAAhBoB,KAAgC,eAC5BL,EAAkBzB,mBACZ8B,EAAKpB,EAAXoB,KAA0BL,aAD1BA,EAAc,IAAIzB,MAAM+B,YAAYF,GAFpCJ,EAAJK,KAAiBJ,cAAjBD,IAMIA,EAAYO,aAAZjB,YAAA,UAEHU,EAAAQ,aAAAC,SAAA,QAAAA,SAAA,CAKGC,QAAS,GAHbV,CAEAA,SAAYQ,EAAAA,OAAaC,WACZ,IAAAE,EAAAlC,QAAAmC,YAAA3B,GACV4B,EAAAtC,MAAAuC,gBAAAH,GAESA,MAAWlC,kBAAAoC,EAAfE,OAAAF,EAAA,CAAAG,EAAAC,KACkBD,GAACF,EAAgBH,OAE7BO,MAAkBL,EAAOE,OAG1Bf,EAAAmB,sBAAA,KAEWA,WAAAA,KAEKlB,IACEA,EAAA3B,EAAA,4CAAA8C,SAAAhB,GACEH,EAAAoB,IAAA,UAAA,GACApC,EAAboB,KAAA,UAAAJ,IAIJD,EAAYQ,aAAaC,SAAS,CAACC,QAAS,GAAI,CAApCF,SAAaC,OAASa,SAAA,KAAUrB,EAAAQ,SAAA,CAAAC,QAAA,GAAA,CAAAa,SAAA,SAAIpB,EAAAb,YAAA,YAAAa,EAAAqB,QAAA,aAEd,MAAM,CAACD,SAAUjD,EAAAmD,SAC3CtB,QAHRF,GAODA,EAdHoB,IAAA,UAAA,GAPJlB,EAAAZ,SAAA,YAyBDY,EA7BOqB,QAAA,YAlD1B,CAkFYE","file":"ClearCachesUtility.min.js","sourcesContent":["(function($) {\n    Craft.ClearCachesUtility = Garnish.Base.extend({\n        init: function(formId) {\n            let $forms = $('form.utility');\n            for (let i = 0; i < $forms.length; i++) {\n                let $form = $forms.eq(i);\n                let $checkboxes = $form.find('input[type=checkbox]');\n                let $btn = $form.find('.btn');\n                let checkInputs = function() {\n                    if ($checkboxes.filter(':checked').length) {\n                        $btn.removeClass('disabled');\n                    } else {\n                        $btn.addClass('disabled');\n                    }\n                };\n                $checkboxes.on('change', checkInputs);\n                checkInputs();\n                this.addListener($form, 'submit', ev => {\n                    ev.preventDefault();\n                    if (!$btn.hasClass('disabled')) {\n                        this.onSubmit(ev);\n                    }\n                });\n            }\n        },\n\n        onSubmit: function(ev) {\n            let $form = $(ev.currentTarget);\n            let $trigger = $form.find('button.submit');\n            let $status = $form.find('.utility-status');\n\n            if ($trigger.hasClass('disabled')) {\n                return;\n            }\n\n            let progressBar, $allDone;\n            if (!$form.data('progressBar')) {\n                progressBar = new Craft.ProgressBar($status);\n                $form.data('progressBar', progressBar);\n            } else {\n                progressBar = $form.data('progressBar');\n                progressBar.resetProgressBar();\n                $allDone = $form.data('allDone');\n            }\n\n            progressBar.$progressBar.removeClass('hidden');\n\n            progressBar.$progressBar.velocity('stop').velocity({\n                opacity: 1\n            }, {\n                complete: $.proxy(function() {\n                    let postData = Garnish.getPostData($form);\n                    let params = Craft.expandPostArray(postData);\n\n                    Craft.postActionRequest(params.action, params, (response, textStatus) => {\n                        if (response && response.error) {\n                            alert(response.error);\n                        }\n\n                        progressBar.setProgressPercentage(100);\n\n                        setTimeout(() => {\n                            if (!$allDone) {\n                                $allDone = $('<div class=\"alldone\" data-icon=\"done\" />').appendTo($status);\n                                $allDone.css('opacity', 0);\n                                $form.data('allDone', $allDone);\n                            }\n\n                            progressBar.$progressBar.velocity({opacity: 0}, {\n                                duration: 'fast', complete: () => {\n                                    $allDone.velocity({opacity: 1}, {duration: 'fast'});\n                                    $trigger.removeClass('disabled');\n                                    $trigger.trigger('focus');\n                                },\n                            });\n                        }, 300);\n                    }, {\n                        complete: $.noop\n                    });\n                }, this)\n            });\n\n            if ($allDone) {\n                $allDone.css('opacity', 0);\n            }\n\n            $trigger.addClass('disabled');\n            $trigger.trigger('blur');\n        },\n    });\n})(jQuery);\n"]}