{"version":3,"sources":["edituser/src/AccountSettingsForm.js"],"names":["$","Craft","AccountSettingsForm","Garnish","Base","extend","userId","$copyPasswordResetUrlBtn","$copyImpersonationUrlBtn","$actionSpinner","$deleteBtn","init","isCurrent","settings","setSettings","defaults","addListener","this","elevatedSessionManager","proxy","handleCopyPasswordResetUrlBtnClick","requireElevatedSession","getPasswordResetUrl","textStatus","removeClass","label","value","response","url","postActionRequest","data","addClass","ui","createCopyTextPrompt","confirmDeleteModal","showConfirmDeleteModal","show","DeleteUserModal","contentSummary","redirect","deleteModalRedirect","jQuery"],"mappings":"CAAA,SAACA,GAEGC,MAAAC,oBAAAC,QAAAC,KAAAC,OAAA,CACMH,OAAAA,KACFI,UAD4C,KAI5CC,yBAJ4C,KAK5CC,yBAL4C,KAM5CC,eAN4C,KAS5CC,mBAT4C,KAWxCA,WAAWJ,KAEXK,KAAKC,SAAYA,EAAAA,EAAjBC,GAEKC,KAAAA,OAAYD,EAEZN,KAAAA,UAAAA,EAEAE,KAAAA,YAAkBI,EAACZ,MAAAC,oBAAxBa,UAGKC,KAAAA,yBAAiBT,EAAAA,2BACjBS,KAAAA,yBAAiBR,EAAAA,2BACjBQ,KAAAA,eAAiBN,EAAAA,mBAxBkBO,KAAAP,WAAAV,EAAA,eA4BxCiB,KAAAD,YAAAC,KAAAV,yBAAA,QAAA,sCACMW,KAAAA,YAAAA,KAANV,yBAAsDW,QAAM,sCA7BpBF,KAAAD,YAAAC,KAAAP,WAAA,QAAA,2BAmCxCU,mCAAW,WAAXnB,MAAAiB,uBAAAG,uBAAArB,EAAAmB,MAAAF,KAAA,yBAHJK,oBAAqB,WAUTC,KAAAA,eAAeC,YAAW,UAEtBC,IAAAA,EAAOxB,CACPyB,OAAOC,KAASC,QAGzB3B,MATH4B,kBAAA,+BAAAC,EAAA9B,EAAAmB,OAAA,SAAAQ,EAAAJ,GAvCwCN,KAAAR,eAAAsB,SAAA,UAoDpBP,YAAff,GAEMR,MAAA+B,GAAAC,qBAAA,CACM3B,MAAAA,MAAAA,EAAAA,MAAAA,2BADjBoB,MAAAC,EAAAC,QANGX,QAeSQ,mCAAsB,WACtBC,KAAKjB,eAAWmB,YAAAA,UAEvB,IAAAE,EAAA,CARLxB,OAAAW,KAAAX,QAaKL,MAAKiC,kBAAoB,8BAAAJ,EAAA,CAAAH,EAAAJ,KACrBd,KAAAA,eAAee,SAAY,UACoClB,YAALiB,GAAsBtB,MAAA+B,GAASL,qBAAT,CAC5ElB,MAAesB,MAAAA,EAAS,MAAA,oEAVzBL,MAAOC,EAASC,SAgBnBO,uBAAA,WAPLlB,KAAAiB,mBAUAjB,KAAKiB,mBAAmBE,QADrBnB,KAAAR,eAAAe,YAAA,UACEU,MAAAA,kBAAL,6BAAA,CAAA5B,OAAAW,KAAAX,QAAAN,EAAAmB,OAAA,SAAAQ,EAAAJ,GACHN,KAAAR,eAAAsB,SAAA,UACJ,YAAAR,IACFN,KAAAiB,mBAAA,IAAAjC,MAAAoC,gBAAApB,KAAAX,OAAA,CACWgC,eAAAX,EACeY,SAAAtB,KAAAJ,SAAA2B,yBA3FjCvB,UAyFO,CACCF,SAAU,CACNyB,oBAAqB,QA3FjC,CA8FGC","file":"AccountSettingsForm.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.AccountSettingsForm = Garnish.Base.extend({\n        userId: null,\n        isCurrent: null,\n\n        $copyPasswordResetUrlBtn: null,\n        $copyImpersonationUrlBtn: null,\n        $actionSpinner: null,\n\n        confirmDeleteModal: null,\n        $deleteBtn: null,\n\n        init: function(userId, isCurrent, settings) {\n            this.userId = userId;\n            this.isCurrent = isCurrent;\n\n            this.setSettings(settings, Craft.AccountSettingsForm.defaults);\n\n            this.$copyPasswordResetUrlBtn = $('#copy-passwordreset-url');\n            this.$copyImpersonationUrlBtn = $('#copy-impersonation-url')\n            this.$actionSpinner = $('#action-spinner');\n            this.$deleteBtn = $('#delete-btn');\n\n            this.addListener(this.$copyPasswordResetUrlBtn, 'click', 'handleCopyPasswordResetUrlBtnClick');\n            this.addListener(this.$copyImpersonationUrlBtn, 'click', 'handleCopyImpersonationUrlBtnClick');\n            this.addListener(this.$deleteBtn, 'click', 'showConfirmDeleteModal');\n        },\n\n        handleCopyPasswordResetUrlBtnClick: function() {\n            // Requires an elevated session\n            Craft.elevatedSessionManager.requireElevatedSession($.proxy(this, 'getPasswordResetUrl'));\n        },\n\n        getPasswordResetUrl: function() {\n            this.$actionSpinner.removeClass('hidden');\n\n            var data = {\n                userId: this.userId\n            };\n\n            Craft.postActionRequest('users/get-password-reset-url', data, $.proxy(function(response, textStatus) {\n                this.$actionSpinner.addClass('hidden');\n\n                if (textStatus === 'success') {\n                    Craft.ui.createCopyTextPrompt({\n                        label: Craft.t('app', 'Copy the activation URL'),\n                        value: response.url,\n                    });\n                }\n            }, this));\n        },\n\n        handleCopyImpersonationUrlBtnClick: function() {\n            this.$actionSpinner.removeClass('hidden');\n\n            var data = {\n                userId: this.userId\n            };\n\n            Craft.postActionRequest('users/get-impersonation-url', data, (response, textStatus) => {\n                this.$actionSpinner.addClass('hidden');\n\n                if (textStatus === 'success') {\n                    Craft.ui.createCopyTextPrompt({\n                        label: Craft.t('app', 'Copy the impersonation URL, and open it in a new private window.'),\n                        value: response.url,\n                    });\n                }\n            });\n        },\n\n        showConfirmDeleteModal: function() {\n            if (!this.confirmDeleteModal) {\n                this.$actionSpinner.removeClass('hidden');\n                Craft.postActionRequest('users/user-content-summary', {userId: this.userId}, $.proxy(function(response, textStatus) {\n                    this.$actionSpinner.addClass('hidden');\n                    if (textStatus === 'success') {\n                        this.confirmDeleteModal = new Craft.DeleteUserModal(this.userId, {\n                            contentSummary: response,\n                            redirect: this.settings.deleteModalRedirect\n                        });\n                    }\n                }, this));\n            } else {\n                this.confirmDeleteModal.show();\n            }\n        }\n    }, {\n        defaults: {\n            deleteModalRedirect: null\n        }\n    });\n})(jQuery);\n"]}