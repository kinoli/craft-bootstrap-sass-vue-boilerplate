{"version":3,"sources":["dbbackup/src/DbBackupUtility.js"],"names":["$","Craft","DbBackupUtility","Garnish","Base","extend","$trigger","$form","init","formId","$status","this","addListener","onSubmit","hasClass","ev","preventDefault","progressBar","$progressBar","resetProgressBar","ProgressBar","removeClass","velocity","downloadFromUrl","setTimeout","onComplete","catch","prop","displayError","getActionUrl","serialize","then","updateProgressBar","bind","postActionRequest","cp","t","response","textStatus","trigger","$allDone","css","addClass","setProgressPercentage","opacity","showAllDone","appendTo","proxy","duration","complete","jQuery"],"mappings":"CAAA,SAACA,GACGC,MAAMC,gBAAkBC,QAAQC,KAAKC,OAAO,CACxCC,SADwC,KAExCC,MAFwC,KAKpCC,KAAKD,SAAUE,GACVH,KAAAA,MAAaN,EAAA,IAAAS,GACbC,KAAAA,SAAYV,EAAA,eAAmBW,KAAKJ,OAEpCK,KAAAA,QAAYZ,EAAKO,kBAAiBI,KAAAJ,OAGnCI,KAAEC,YAAaD,KAAAJ,MAAA,SAAA,aAGnBM,SAAUP,SAASQ,GACXC,EAACC,iBAEEL,KAAAL,SAAAQ,SAAA,cACEG,KAALA,YAGCA,KAAYC,YAAjBC,mBAFCR,KAAAM,YAAA,IAAAhB,MAAAmB,YAAAT,KAAAD,SAMEC,KAAAM,YAAAC,aAAAG,YAAA,UAEUrB,KAAEiB,YAAAC,aAAyBI,SAAa,QAAAA,SAAA,CACnCC,QAAAA,GAEE,CACAC,SAAWxB,EAAKyB,MAAAA,WAEnBC,EAAAA,oBAAiBC,KAAA,WACLC,MAAAA,gBAAqB,OAAO3B,MAAA4B,aAAA,sCAAAlB,KAAAJ,MAAAuB,aACrBC,KAAhB,WAPRpB,KAAAqB,oBASGR,WAAAb,KAAAc,WAAAQ,KAAAtB,MAAA,MACGuB,KAAkBvB,OACfqB,MAAL,WALI/B,MAAMkC,GAAGP,aAAa3B,MAAMmC,EAAE,MAAO,+EAMtBzB,KAAAc,YAAW,IACVA,KAAAA,OAEPG,MAAAA,kBAAqB,qCAAO,SAAAS,EAAAC,GAChCb,KAAWO,oBACnB,YAAAM,EAPLd,WAAAb,KAAAc,WAAAQ,KAAAtB,MAAA,MAZEV,MAAAkC,GAAAP,aAAA3B,MAAAmC,EAAA,MAAA,+EAHdzB,KAAAc,YAAA,KA4BmBQ,KAAAtB,QAElBsB,KAAAtB,SAGIL,KAASiC,UACjB5B,KAAA6B,SAAAC,IAAA,UAAA,GAIQ9B,KAATL,SAAAoC,SAAA,YACKzB,KAAAA,SAAY0B,QAAAA,UAKbX,kBAAkB,WAErBrB,KAAAM,YAAA0B,sBADiBF,MAGsBG,WAAS,SAAAC,GAAIlC,KAAA6B,WACzC7B,KAAE6B,SADuCxC,EAAA,4CAAA8C,SAAAnC,KAAAD,SACvBC,KAAIoC,SAAMN,IAAA,UAAW,IAEfG,KAAAA,YAAS1B,aAAAI,SAAA,CAAAsB,QAAA,GAAA,CAAII,SAAA,OAAAC,SAAAjD,EAAA+C,OAAA,gBAAW,IAAAF,IAAA,IAAAA,GAAhDlC,KAAA6B,SAAAlB,SAAA,CAAAsB,QAAA,GAAA,CAAAI,SAAA,SAGC1C,KAASe,SAAAA,YAAd,YACKf,KAASiC,SAAQA,QAAtB,WANwB5B,WA1E5C,CAqFGuC","file":"DbBackupUtility.min.js","sourcesContent":["(function($) {\n    Craft.DbBackupUtility = Garnish.Base.extend({\n        $trigger: null,\n        $form: null,\n\n        init: function(formId) {\n            this.$form = $('#' + formId);\n            this.$trigger = $('input.submit', this.$form);\n            this.$status = $('.utility-status', this.$form);\n\n            this.addListener(this.$form, 'submit', 'onSubmit');\n        },\n\n        onSubmit: function(ev) {\n            ev.preventDefault();\n\n            if (!this.$trigger.hasClass('disabled')) {\n                if (!this.progressBar) {\n                    this.progressBar = new Craft.ProgressBar(this.$status);\n                } else {\n                    this.progressBar.resetProgressBar();\n                }\n\n                this.progressBar.$progressBar.removeClass('hidden');\n\n                this.progressBar.$progressBar.velocity('stop').velocity({\n                    opacity: 1\n                }, {\n                    complete: $.proxy(function() {\n                        if (($('#download-backup').prop('checked'))) {\n                            Craft.downloadFromUrl('POST', Craft.getActionUrl('utilities/db-backup-perform-action'), this.$form.serialize())\n                                .then(function() {\n                                    this.updateProgressBar();\n                                    setTimeout(this.onComplete.bind(this), 300);\n                                }.bind(this))\n                                .catch(function() {\n                                    Craft.cp.displayError(Craft.t('app', 'There was a problem backing up your database. Please check the Craft logs.'));\n                                    this.onComplete(false);\n                                }.bind(this));\n                        } else {\n                            Craft.postActionRequest('utilities/db-backup-perform-action', function(response, textStatus) {\n                                this.updateProgressBar();\n                                if (textStatus === 'success') {\n                                    setTimeout(this.onComplete.bind(this), 300);\n                                } else {\n                                    Craft.cp.displayError(Craft.t('app', 'There was a problem backing up your database. Please check the Craft logs.'));\n                                    this.onComplete(false);\n                                }\n                            }.bind(this))\n                        }\n                    }.bind(this))\n                });\n\n                if (this.$allDone) {\n                    this.$allDone.css('opacity', 0);\n                }\n\n                this.$trigger.addClass('disabled');\n                this.$trigger.trigger('blur');\n            }\n        },\n\n        updateProgressBar: function() {\n            var width = 100;\n            this.progressBar.setProgressPercentage(width);\n        },\n\n        onComplete: function(showAllDone) {\n            if (!this.$allDone) {\n                this.$allDone = $('<div class=\"alldone\" data-icon=\"done\" />').appendTo(this.$status);\n                this.$allDone.css('opacity', 0);\n            }\n\n            this.progressBar.$progressBar.velocity({opacity: 0}, {\n                duration: 'fast', complete: $.proxy(function() {\n                    if (typeof showAllDone === 'undefined' || showAllDone === true) {\n                        this.$allDone.velocity({opacity: 1}, {duration: 'fast'});\n                    }\n\n                    this.$trigger.removeClass('disabled');\n                    this.$trigger.trigger('focus');\n                }, this)\n            });\n        }\n    });\n})(jQuery);\n"]}