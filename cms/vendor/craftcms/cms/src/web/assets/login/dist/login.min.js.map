{"version":3,"sources":["login/src/login.js"],"names":["$","LoginForm","Garnish","Base","extend","$form","$loginNameInput","$passwordInput","$rememberMeCheckbox","$forgotPasswordLink","$rememberPasswordLink","$submitBtn","$spinner","forgotPassword","validateOnInput","init","$errors","Craft","PasswordInput","removeListener","$newPasswordInput","addListener","this","loginNameVal","validate","val","length","window","useEmailAsUsername","t","match","passwordLength","minPasswordLength","attribute","min","maxPasswordLength","onInput","clearErrors","event","preventDefault","showError","error","addClass","removeClass","submitForgotPassword","submitLogin","textStatus","response","success","data","proxy","MessageSentModal","loginName","onSubmitResponse","password","postActionRequest","location","href","returnUrl","rememberMe","prop","shake","onSwitchForm","isMobileBrowser","velocity","$container","empty","trigger","toggleClass","text","Modal","appendTo","$bod","base","hide","jQuery"],"mappings":"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","file":"login.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    var LoginForm = Garnish.Base.extend({\n        $form: null,\n        $loginNameInput: null,\n        $passwordInput: null,\n        $rememberMeCheckbox: null,\n        $forgotPasswordLink: null,\n        $rememberPasswordLink: null,\n        $submitBtn: null,\n        $spinner: null,\n        $errors: null,\n\n        forgotPassword: false,\n        validateOnInput: false,\n\n        init: function() {\n            this.$form = $('#login-form');\n            this.$loginNameInput = $('#loginName');\n            this.$passwordInput = $('#password');\n            this.$rememberMeCheckbox = $('#rememberMe');\n            this.$forgotPasswordLink = $('#forgot-password');\n            this.$rememberPasswordLink = $('#remember-password');\n            this.$submitBtn = $('#submit');\n            this.$spinner = $('#spinner');\n            this.$errors = $('#login-errors');\n\n            new Craft.PasswordInput(this.$passwordInput, {\n                onToggleInput: $.proxy(function($newPasswordInput) {\n                    this.removeListener(this.$passwordInput, 'input');\n                    this.$passwordInput = $newPasswordInput;\n                    this.addListener(this.$passwordInput, 'input', 'onInput');\n                }, this)\n            });\n\n            this.addListener(this.$loginNameInput, 'input', 'onInput')\n            this.addListener(this.$passwordInput, 'input', 'onInput');\n            this.addListener(this.$forgotPasswordLink, 'click', 'onSwitchForm');\n            this.addListener(this.$rememberPasswordLink, 'click', 'onSwitchForm');\n            this.addListener(this.$form, 'submit', 'onSubmit');\n        },\n\n        validate: function() {\n            const loginNameVal = this.$loginNameInput.val();\n            if (loginNameVal.length === 0) {\n                if (window.useEmailAsUsername) {\n                    return Craft.t('app', 'Invalid email.');\n                }\n                return Craft.t('app', 'Invalid username or email.');\n            }\n\n            if (window.useEmailAsUsername && !loginNameVal.match('.+@.+\\..+')) {\n                return Craft.t('app', 'Invalid email.');\n            }\n\n            if (!this.forgotPassword) {\n                const passwordLength = this.$passwordInput.val().length;\n                if (passwordLength < window.minPasswordLength) {\n                    return Craft.t('yii', '{attribute} should contain at least {min, number} {min, plural, one{character} other{characters}}.', {\n                        attribute: Craft.t('app', 'Password'),\n                        min: window.minPasswordLength,\n                    });\n                }\n                if (passwordLength > window.maxPasswordLength) {\n                    return Craft.t('yii', '{attribute} should contain at most {max, number} {max, plural, one{character} other{characters}}.', {\n                        attribute: Craft.t('app', 'Password'),\n                        max: window.maxPasswordLength,\n                    });\n                }\n            }\n\n            return true;\n        },\n\n        onInput: function(event) {\n            if (this.validateOnInput && this.validate() === true) {\n                this.clearErrors();\n            }\n        },\n\n        onSubmit: function(event) {\n            // Prevent full HTTP submits\n            event.preventDefault();\n\n            const error = this.validate();\n            if (error !== true) {\n                this.showError(error);\n                this.validateOnInput = true;\n                return;\n            }\n\n            this.$submitBtn.addClass('active');\n            this.$spinner.removeClass('hidden');\n\n            this.clearErrors();\n\n            if (this.forgotPassword) {\n                this.submitForgotPassword();\n            } else {\n                this.submitLogin();\n            }\n        },\n\n        submitForgotPassword: function() {\n            var data = {\n                loginName: this.$loginNameInput.val()\n            };\n\n            Craft.postActionRequest('users/send-password-reset-email', data, $.proxy(function(response, textStatus) {\n                if (textStatus === 'success') {\n                    if (response.success) {\n                        new MessageSentModal();\n                    } else {\n                        this.showError(response.error);\n                    }\n                }\n\n                this.onSubmitResponse();\n            }, this));\n        },\n\n        submitLogin: function() {\n            var data = {\n                loginName: this.$loginNameInput.val(),\n                password: this.$passwordInput.val(),\n                rememberMe: (this.$rememberMeCheckbox.prop('checked') ? 'y' : '')\n            };\n\n            Craft.postActionRequest('users/login', data, $.proxy(function(response, textStatus) {\n                if (textStatus === 'success') {\n                    if (response.success) {\n                        window.location.href = response.returnUrl;\n                    } else {\n                        Garnish.shake(this.$form);\n                        this.onSubmitResponse();\n\n                        // Add the error message\n                        this.showError(response.error);\n                    }\n                } else {\n                    this.onSubmitResponse();\n                }\n            }, this));\n\n            return false;\n        },\n\n        onSubmitResponse: function() {\n            this.$submitBtn.removeClass('active');\n            this.$spinner.addClass('hidden');\n        },\n\n        showError: function(error) {\n            this.clearErrors();\n\n            $('<p style=\"display: none;\">' + error + '</p>')\n                .appendTo(this.$errors)\n                .velocity('fadeIn');\n        },\n\n        clearErrors: function() {\n            this.$errors.empty();\n        },\n\n        onSwitchForm: function(event) {\n            if (!Garnish.isMobileBrowser()) {\n                this.$loginNameInput.trigger('focus');\n            }\n\n            this.clearErrors();\n\n            this.forgotPassword = !this.forgotPassword;\n\n            this.$form.toggleClass('reset-password', this.forgotPassword);\n            this.$submitBtn.text(Craft.t('app', this.forgotPassword ? 'Reset Password' : 'Login'));\n        },\n    });\n\n    var MessageSentModal = Garnish.Modal.extend({\n        init: function() {\n            var $container = $('<div class=\"modal fitted email-sent\"><div class=\"body\">' + Craft.t('app', 'Check your email for instructions to reset your password.') + '</div></div>')\n                .appendTo(Garnish.$bod);\n\n            this.base($container);\n        },\n\n        hide: function() {\n        }\n    });\n\n    new LoginForm();\n})(jQuery);\n"]}